
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
	
	##

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	
	log_format  custom  escape=none '$time_local , $remote_addr , $remote_user , $http_referer , $request , $status , $request_body';
		
    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #server {
    #    listen       81;
    #    server_name  localhost;
	#
    #    #charset koi8-r;
	#
    #    #access_log  logs/host.access.log  main;
	#
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
	#
    #    #error_page  404              /404.html;
	#
    #    # redirect server error pages to the static page /50x.html
    #    #
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }
	#
    #    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #    #
    #    #location ~ \.php$ {
    #    #    proxy_pass   http://127.0.0.1;
    #    #}
	#
    #    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #    #
    #    #location ~ \.php$ {
    #    #    root           html;
    #    #    fastcgi_pass   127.0.0.1:9000;
    #    #    fastcgi_index  index.php;
    #    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    #    include        fastcgi_params;
    #    #}
	#
    #    # deny access to .htaccess files, if Apache's document root
    #    # concurs with nginx's one
    #    #
    #    #location ~ /\.ht {
    #    #    deny  all;
    #    #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    #server {
    #    listen       7878;
    #    server_name  localhost;
	#
    #    location / {
    #        root   html/daniel/dist;
    #        index  index.html;
	#		add_header Access-Control-Allow-Origin *;
    #    }
	#
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }
	#
    #}

    #server {
    #    listen       6868;
    #    server_name  localhost;
	#
    #    location / {
    #        root   html/other/dist;
    #        index  index.html;
    #    }
	#
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }
	#
    #}
	
	
	server {
        listen       3232;
        server_name  localhost;
		return 301    https://$host:4242$request_uri;
	}
	
	server {
        listen       4242 ssl;
        server_name  localhost;
		
		ssl_certificate      ssl/nginx.crt;
        ssl_certificate_key  ssl/nginx.key;
	
		access_log  logs/productivity-tools-platform/access.log  custom;
		
	    #disable_symlinks off; #允許symbolic link

        gzip on;                 #決定是否開啟gzip模組，on表示開啟，off表示關閉；
        gzip_min_length 1k;      #設定允許壓縮的頁面最小位元組(從header頭的Content-Length中取得)，當傳回內容大於此值時才會使用gzip進行壓縮，以K為單位，當值為0時，所有頁面都進行壓縮。
        gzip_buffers 4 16k;      #設定gzip申請記憶體的大小,其作用是按區塊大小的倍數申請記憶體空間,param2:int(k) 後面單位是k。這裡設定以16k為單位,依照原始資料大小以16k為單位的4倍申請內存
        gzip_http_version 1.1;   #識別http協定的版本，早起瀏覽器可能不支援gzip自解壓，使用者會看到亂碼
        gzip_comp_level 2;       #設定gzip壓縮等級，等級越底壓縮速度越快檔案壓縮比越小，反之速度越慢檔案壓縮比越大；等級1-9，最小的壓縮速度最快但消耗cpu
        gzip_types text/plain text/css application/json application/xml;    #設定需要壓縮的MIME類型，非設定值不進行壓縮，即符合壓縮類型
        gzip_vary on;            #初始化回應header "Vary: Accept-Encoding"
		
        location / {
			root       html/productivity-tools-platform/frontend/dist;
			try_files  $uri $uri/ /index.html;
        }
		location /productivity-tools-platform {
			alias      html/productivity-tools-platform/frontend/dist;
            index      index.html;
			try_files  $uri $uri/ /index.html;
        }
        location /nestjs {
            proxy_pass http://172.24.73.75:3636;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
	
	server {
        listen       3434;
        server_name  localhost;
		return 301 https://$host:4444$request_uri;
	}
	
	server {
        listen       4444 ssl;
        server_name  localhost;
		
		ssl_certificate      ssl/nginx.crt;
        ssl_certificate_key  ssl/nginx.key;
	
		access_log  logs/productivity-tools-platform-dev/access.log  custom;
		
	    #disable_symlinks off; #允許symbolic link

        gzip on;                 #決定是否開啟gzip模組，on表示開啟，off表示關閉；
        gzip_min_length 1k;      #設定允許壓縮的頁面最小位元組(從header頭的Content-Length中取得)，當傳回內容大於此值時才會使用gzip進行壓縮，以K為單位，當值為0時，所有頁面都進行壓縮。
        gzip_buffers 4 16k;      #設定gzip申請記憶體的大小,其作用是按區塊大小的倍數申請記憶體空間,param2:int(k) 後面單位是k。這裡設定以16k為單位,依照原始資料大小以16k為單位的4倍申請內存
        gzip_http_version 1.1;   #識別http協定的版本，早起瀏覽器可能不支援gzip自解壓，使用者會看到亂碼
        gzip_comp_level 2;       #設定gzip壓縮等級，等級越底壓縮速度越快檔案壓縮比越小，反之速度越慢檔案壓縮比越大；等級1-9，最小的壓縮速度最快但消耗cpu
        gzip_types text/plain text/css application/json application/xml;    #設定需要壓縮的MIME類型，非設定值不進行壓縮，即符合壓縮類型
        gzip_vary on;            #初始化回應header "Vary: Accept-Encoding"
		
        location / {
			root       html/productivity-tools-platform-dev/frontend/dist;
			try_files  $uri $uri/ /index.html;
        }
		location /productivity-tools-platform {
			alias      html/productivity-tools-platform-dev/frontend/dist;
            index      index.html;
			try_files  $uri $uri/ /index.html;
        }
        location /nestjs {
            proxy_pass http://172.24.73.75:3838;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
	
	
	# micro-app-test
    #server {
    #    listen       9700;
    #    server_name  localhost;
	#
    #    location / {
    #        root   html/micro-app;
    #        index  index.html;
	#		add_header Access-Control-Allow-Origin *;
    #    }
	#
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }
	#
    #}
	
	# vuetify-trace-log
	#server {
    #    listen       3838;
    #    server_name  localhost;
	#
    #    location / {
    #        root   html/trace-log/dist;
    #        index  index.html;
	#		try_files $uri $uri/ /index.html;
    #    }
	#
    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   html;
    #    }
    #}

}
